let
    var c := getchar()
    
    function read_int(): int =
    let
        var result := 0
        function is_digit(c: string): int = (
            ord(c) >= ord("0") & ord(c) <= ord("9")
        )
    in
        while strlen(c) > 0 & is_digit(c) do (
            result := result * 10 + ord(c) - ord("0");
            c := getchar();
        );
        result
    end

    type List = { head: int, tail: List }
    function read_list(): List = (
        if c = " " then(
            c := getchar();
        );
        if c = "\n" then (
            c := getchar();
            nil
        ) else (
            List { head: read_int(), tail: read_list() }
        )
    )
    function print_list(list: List) = (
        if list = nil then (
            print("\n");
        ) else (
            print(list.head + " ");
            print_list(list.tail);
        );
    )

    function merge(list1: List, list2: List): List = (
        if list1 = nil then (
            list2
        ) else if list2 = nil then (
            list1
        ) else if list1.head < list2.head then (
            List { head: list1.head, tail: merge(list1.tail, list2) }
        ) else (
            List { head: list2.head, tail: merge(list1, list2.tail) }
        )
    )
in
    print_list(merge(read_list(), read_list()));
end
